buildscript {
	ext {
		querydslPluginVersion = '1.0.10'
	}

	repositories {
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}

	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
	}
}

plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.rainyheaven'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar {
	enabled = false
}

jar {
	enabled = true
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// querydsl
	compile("com.querydsl:querydsl-jpa")
	annotationProcessor("com.querydsl:querydsl-jpa")
	compile("com.querydsl:querydsl-apt")
	annotationProcessor("com.querydsl:querydsl-apt")

	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'

	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtime 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtime 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// aws ses (aws email sender)
	implementation('com.amazonaws:aws-java-sdk-ses:1.11.934')

	// aws 파일 업로드 관련
	compile group: 'com.amazonaws', name: 'aws-java-sdk-bom', version: '1.11.934', ext: 'pom'
	compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.11.934'
	compile("commons-fileupload:commons-fileupload:1.3.3")
}

test {
	useJUnitPlatform()
}

// queryDsl
apply plugin: "com.ewerk.gradle.plugins.querydsl"
def querydslSrcDir = 'build/querdsl'

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslSrcDir
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
	querydsl.extendsFrom compileClasspath
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}

